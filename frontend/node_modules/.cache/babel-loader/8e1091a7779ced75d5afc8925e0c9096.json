{"ast":null,"code":"var _jsxFileName = \"H:\\\\MERAKI_Academy\\\\Projects\\\\MERAKI_Academy_Project_5\\\\frontend\\\\src\\\\components\\\\profile\\\\breakfast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // import \"./profile.css\";\n\nimport \"./../mypatint/mypatint.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Breakfast = ({\n  date\n}) => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [result2, setResult2] = useState([]);\n  const [getBreakfast, setGetBreakfast] = useState([]);\n  const [lunch, setLunch] = useState([]); // const [date, onChange] = useState();\n\n  const token = localStorage.getItem(\"token\");\n  const today = new Date();\n  const heading = [\"Name\", \"calories\", \"serving\", \"sugar\", \"protein\", \"carbohydrates\", \"cholesterol\", \"fat_saturated\", \"potassium\", \"sodium\", \"\"];\n\n  const getFood = () => {\n    axios.get(`https://api.calorieninjas.com/v1/nutrition?query=${query}`, {\n      headers: {\n        \"X-Api-Key\": \"Pjf0wWWm+Yr/ZE8oa23Dyg==c9VY1TVMpVLHA8Oe\"\n      },\n      async: true,\n      body: JSON.stringify(\"Hello from Lambda!\")\n    }).then(res => {\n      setResult(res.data.items);\n      setResult2(res.data.items);\n      setQuery(\"\");\n    }).catch(err => {});\n  };\n\n  useEffect(() => {\n    axios.post(`http://localhost:5000/breakfast`, {\n      date\n    }, {\n      headers: {\n        authorization: \"Bearer \" + token\n      }\n    }).then(res => {\n      setGetBreakfast(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [getBreakfast]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          getFood();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: 500,\n            marginBottom: \"30px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                textAlign: \"center\",\n                fontWeight: \"bold\"\n              },\n              children: \"breakfast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-food\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"input-breakfast\",\n                onChange: e => {\n                  setQuery(e.target.value);\n                },\n                placeholder: \"Search your food ...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), result && result.map((elem, i) => {\n              let name = elem.name;\n              let calories = elem.calories;\n              let carbohydrates = elem.carbohydrates_total_g;\n              let cholesterol = elem.cholesterol_mg;\n              let fat_saturated = elem.fat_saturated_g;\n              let fiber = elem.fiber_g;\n              let potassium = elem.potassium_mg;\n              let protein = elem.protein_g;\n              let serving = elem.serving_size_g;\n              let sodium_mg = elem.sodium_mg;\n              let sugar_g = elem.sugar_g;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                onClick: () => {\n                  axios.post(`http://localhost:5000/add/breakfast`, {\n                    name,\n                    calories,\n                    date,\n                    carbohydrates,\n                    cholesterol,\n                    fat_saturated,\n                    fiber,\n                    potassium,\n                    protein,\n                    serving,\n                    sodium_mg,\n                    sugar_g\n                  }, {\n                    headers: {\n                      authorization: \"Bearer \" + token\n                    }\n                  }).then(res => {\n                    setResult([]);\n                    console.log(res.data);\n                  }).catch(err => {});\n                  document.getElementById(\"input-breakfast\").value = \"\";\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: elem.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: heading.map(head => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: head\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            style: {\n              marginBottom: \"20px\"\n            },\n            children: getBreakfast && getBreakfast.map(element => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.calories\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.serving_size_g\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.sugar_g\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.protein_g\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.carbohydrates_total_g\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.cholesterol_mg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.fat_saturated_g\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.potassium_mg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: element.sodium_mg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"https://img.icons8.com/material-rounded/50/000000/delete-sign.png\",\n                      style: {\n                        height: \"20px\",\n                        width: \"20px\"\n                      },\n                      onClick: () => {\n                        axios.delete(`http://localhost:5000/breakfast/${element.breakfast_id}`, {\n                          headers: {\n                            authorization: \"Bearer \" + token\n                          }\n                        }).then(res => {\n                          console.log(res);\n                        }).catch(err => {});\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Breakfast, \"Mdv0ihPOkrVS0mTrzMyeiCE2cHw=\");\n\n_c = Breakfast;\nexport default Breakfast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breakfast\");","map":{"version":3,"sources":["H:/MERAKI_Academy/Projects/MERAKI_Academy_Project_5/frontend/src/components/profile/breakfast.js"],"names":["React","useState","useEffect","axios","Breakfast","date","query","setQuery","result","setResult","result2","setResult2","getBreakfast","setGetBreakfast","lunch","setLunch","token","localStorage","getItem","today","Date","heading","getFood","get","headers","async","body","JSON","stringify","then","res","data","items","catch","err","post","authorization","console","log","e","preventDefault","width","marginBottom","textAlign","fontWeight","target","value","map","elem","i","name","calories","carbohydrates","carbohydrates_total_g","cholesterol","cholesterol_mg","fat_saturated","fat_saturated_g","fiber","fiber_g","potassium","potassium_mg","protein","protein_g","serving","serving_size_g","sodium_mg","sugar_g","document","getElementById","head","element","height","delete","breakfast_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import \"./profile.css\";\r\nimport \"./../mypatint/mypatint.css\";\r\n\r\nconst Breakfast = ({ date }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n  const [result2, setResult2] = useState([]);\r\n  const [getBreakfast, setGetBreakfast] = useState([]);\r\n  const [lunch, setLunch] = useState([]);\r\n  // const [date, onChange] = useState();\r\n  const token = localStorage.getItem(\"token\");\r\n  const today = new Date();\r\n  const heading = [\r\n    \"Name\",\r\n    \"calories\",\r\n    \"serving\",\r\n    \"sugar\",\r\n    \"protein\",\r\n    \"carbohydrates\",\r\n    \"cholesterol\",\r\n    \"fat_saturated\",\r\n    \"potassium\",\r\n    \"sodium\",\r\n    \"\",\r\n  ];\r\n  const getFood = () => {\r\n    axios\r\n      .get(`https://api.calorieninjas.com/v1/nutrition?query=${query}`, {\r\n        headers: {\r\n          \"X-Api-Key\": \"Pjf0wWWm+Yr/ZE8oa23Dyg==c9VY1TVMpVLHA8Oe\",\r\n        },\r\n        async: true,\r\n        body: JSON.stringify(\"Hello from Lambda!\"),\r\n      })\r\n      .then((res) => {\r\n        setResult(res.data.items);\r\n        setResult2(res.data.items);\r\n        setQuery(\"\");\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        `http://localhost:5000/breakfast`,\r\n        { date },\r\n        {\r\n          headers: {\r\n            authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setGetBreakfast(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [getBreakfast]);\r\n  return (\r\n    <div className=\"food-profile\">\r\n      <div></div>\r\n      <div>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            getFood();\r\n          }}\r\n        >\r\n          <table style={{ width: 500, marginBottom: \"30px\" }}>\r\n            <thead>\r\n              <tr style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\r\n                breakfast\r\n              </tr>\r\n              <div className=\"search-food\">\r\n                <input\r\n                  id=\"input-breakfast\"\r\n                  onChange={(e) => {\r\n                    setQuery(e.target.value);\r\n                  }}\r\n                  placeholder=\"Search your food ...\"\r\n                />\r\n                <button>Search</button>\r\n              </div>\r\n              {result &&\r\n                result.map((elem, i) => {\r\n                  let name = elem.name;\r\n                  let calories = elem.calories;\r\n                  let carbohydrates = elem.carbohydrates_total_g;\r\n                  let cholesterol = elem.cholesterol_mg;\r\n                  let fat_saturated = elem.fat_saturated_g;\r\n                  let fiber = elem.fiber_g;\r\n                  let potassium = elem.potassium_mg;\r\n                  let protein = elem.protein_g;\r\n                  let serving = elem.serving_size_g;\r\n                  let sodium_mg = elem.sodium_mg;\r\n                  let sugar_g = elem.sugar_g;\r\n                  return (\r\n                    <div\r\n                      className=\"\"\r\n                      key={i}\r\n                      onClick={() => {\r\n                        axios\r\n                          .post(\r\n                            `http://localhost:5000/add/breakfast`,\r\n                            {\r\n                              name,\r\n                              calories,\r\n                              date,\r\n                              carbohydrates,\r\n                              cholesterol,\r\n                              fat_saturated,\r\n                              fiber,\r\n                              potassium,\r\n                              protein,\r\n                              serving,\r\n                              sodium_mg,\r\n                              sugar_g,\r\n                            },\r\n\r\n                            {\r\n                              headers: {\r\n                                authorization: \"Bearer \" + token,\r\n                              },\r\n                            }\r\n                          )\r\n                          .then((res) => {\r\n                            setResult([]);\r\n                            console.log(res.data);\r\n                          })\r\n                          .catch((err) => {});\r\n                        document.getElementById(\"input-breakfast\").value = \"\";\r\n                      }}\r\n                    >\r\n                      <h2>{elem.name}</h2>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </thead>\r\n            <thead>\r\n              <tr>\r\n                {heading.map((head) => (\r\n                  <th>{head}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody style={{ marginBottom: \"20px\" }}>\r\n              {getBreakfast &&\r\n                getBreakfast.map((element) => {\r\n                  return (\r\n                    <>\r\n                      <tr>\r\n                        <th>{element.name}</th>\r\n                        <th>{element.calories}</th>\r\n                        <th>{element.serving_size_g}</th>\r\n                        <th>{element.sugar_g}</th>\r\n                        <th>{element.protein_g}</th>\r\n                        <th>{element.carbohydrates_total_g}</th>\r\n                        <th>{element.cholesterol_mg}</th>\r\n                        <th>{element.fat_saturated_g}</th>\r\n                        <th>{element.potassium_mg}</th>\r\n                        <th>{element.sodium_mg}</th>\r\n                        <th>\r\n                          <img\r\n                            src=\"https://img.icons8.com/material-rounded/50/000000/delete-sign.png\"\r\n                            style={{ height: \"20px\", width: \"20px\" }}\r\n                            onClick={() => {\r\n                              axios\r\n                                .delete(\r\n                                  `http://localhost:5000/breakfast/${element.breakfast_id}`,\r\n                                  {\r\n                                    headers: {\r\n                                      authorization: \"Bearer \" + token,\r\n                                    },\r\n                                  }\r\n                                )\r\n                                .then((res) => {\r\n                                  console.log(res);\r\n                                })\r\n                                .catch((err) => {});\r\n                            }}\r\n                          />\r\n                        </th>\r\n                      </tr>\r\n                    </>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breakfast;\r\n"]},"metadata":{},"sourceType":"module"}