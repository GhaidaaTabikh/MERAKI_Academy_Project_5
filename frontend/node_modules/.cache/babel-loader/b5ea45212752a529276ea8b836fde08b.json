{"ast":null,"code":"var _jsxFileName = \"H:\\\\MERAKI_Academy\\\\Projects\\\\MERAKI_Academy_Project_5\\\\frontend\\\\src\\\\components\\\\conversation\\\\conversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport \"./conversation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst CONNECTION_PORT = \"http://localhost:5000\";\nsocket = io(CONNECTION_PORT);\ns;\n\nconst Conversation = props => {\n  _s();\n\n  const {\n    sender,\n    receiver,\n    firstName,\n    lastName,\n    img\n  } = props;\n  const userId = localStorage.getItem(\"user_id\");\n  const [result, setResult] = useState([]);\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [firstNameUse, setFirstName] = useState(firstName);\n  const [lastNameUse, setLastName] = useState(lastName);\n  const [imgUse, setImgUse] = useState(img);\n  const scrollRef = useRef(null);\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList([...messageList, data]);\n    });\n  });\n  useEffect(() => {});\n\n  const connectToRoom = () => {\n    socket.emit(\"join_room\", room);\n  };\n\n  const sendMessage = () => {\n    const messageContent = {\n      room,\n      message\n    };\n    socket.emit(\"send_message\", messageContent);\n    setMessageList([...messageList, messageContent.message]);\n    axios.post(`http://localhost:5000/conversation/message`, {\n      message,\n      id: userId,\n      room\n    }).then(result => {}).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    axios.post(`http://localhost:5000/conversation/con`, {\n      sender,\n      receiver\n    }).then(result => {\n      setRoom(result.data.conversation.conversation[0].id);\n      setResult(result.data.result.result);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [messageList]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messageList]);\n  connectToRoom();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-pa\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-i\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-user\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgUse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [firstNameUse, \" \", lastNameUse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: result && result.map((val, i) => {\n          if (val.id_sender == userId) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"width\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-right\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-r\",\n                  ref: scrollRef,\n                  children: val.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"width\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-left\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-l\",\n                  ref: scrollRef,\n                  children: val.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this);\n          } // }\n\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          margin: \"auto\"\n        },\n        type: \"text\",\n        placeholder: \"write you message ...\",\n        onChange: e => {\n          setMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Conversation, \"YMXyDs6W9rTaUth5VCeAUqQnspQ=\");\n\n_c = Conversation;\nexport default Conversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["H:/MERAKI_Academy/Projects/MERAKI_Academy_Project_5/frontend/src/components/conversation/conversation.js"],"names":["React","useState","useEffect","useRef","useHistory","useParams","axios","io","socket","CONNECTION_PORT","s","Conversation","props","sender","receiver","firstName","lastName","img","userId","localStorage","getItem","result","setResult","room","setRoom","message","setMessage","messageList","setMessageList","firstNameUse","setFirstName","lastNameUse","setLastName","imgUse","setImgUse","scrollRef","on","data","connectToRoom","emit","sendMessage","messageContent","post","id","then","catch","err","console","log","conversation","current","scrollIntoView","behavior","map","val","i","id_sender","margin","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"./conversation.css\";\r\n\r\nlet socket;\r\nconst CONNECTION_PORT = \"http://localhost:5000\";\r\nsocket = io(CONNECTION_PORT);\r\ns;\r\nconst Conversation = (props) => {\r\n  const { sender, receiver, firstName, lastName, img } = props;\r\n\r\n  const userId = localStorage.getItem(\"user_id\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const [firstNameUse, setFirstName] = useState(firstName);\r\n  const [lastNameUse, setLastName] = useState(lastName);\r\n  const [imgUse, setImgUse] = useState(img);\r\n\r\n  const scrollRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (data) => {\r\n      setMessageList([...messageList, data]);\r\n    });\r\n  });\r\n  useEffect(() => {});\r\n  const connectToRoom = () => {\r\n    socket.emit(\"join_room\", room);\r\n  };\r\n  const sendMessage = () => {\r\n    const messageContent = {\r\n      room,\r\n      message,\r\n    };\r\n\r\n    socket.emit(\"send_message\", messageContent);\r\n    setMessageList([...messageList, messageContent.message]);\r\n    axios\r\n      .post(`http://localhost:5000/conversation/message`, {\r\n        message,\r\n        id: userId,\r\n        room,\r\n      })\r\n      .then((result) => {})\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .post(`http://localhost:5000/conversation/con`, { sender, receiver })\r\n      .then((result) => {\r\n        setRoom(result.data.conversation.conversation[0].id);\r\n        setResult(result.data.result.result);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [messageList]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messageList]);\r\n\r\n  connectToRoom();\r\n  return (\r\n    <div className=\"conversation-pa\">\r\n      <div className=\"user-i\">\r\n        <div className=\"info-user\">\r\n          <img src={imgUse} />\r\n          <p>\r\n            {firstNameUse} {lastNameUse}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"conversation\">\r\n        <div className=\"\">\r\n          {result &&\r\n            result.map((val, i) => {\r\n              if (val.id_sender == userId) {\r\n                return (\r\n                  <div className=\"width\" key={i}>\r\n                    <div className={\"message-right\"}>\r\n                      <p className=\"message-r\" ref={scrollRef}>\r\n                        {val.message}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"width\" key={i}>\r\n                    <div className={\"message-left\"}>\r\n                      <p className=\"message-l\" ref={scrollRef}>\r\n                        {val.message}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n              // }\r\n            })}\r\n        </div>\r\n      </div>\r\n      <div className=\"input-message\">\r\n        <input\r\n          style={{ margin: \"auto\" }}\r\n          type=\"text\"\r\n          placeholder=\"write you message ...\"\r\n          onChange={(e) => {\r\n            setMessage(e.target.value);\r\n          }}\r\n        />\r\n\r\n        {/* <img src=\"https://img.icons8.com/ios-glyphs/30/000000/filled-sent.png\" /> */}\r\n        <button onClick={sendMessage}>send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n"]},"metadata":{},"sourceType":"module"}